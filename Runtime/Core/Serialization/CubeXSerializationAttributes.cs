//=====================================================================================================================
// Проект: CubeXPlatform
// Раздел: Модуль базового ядра
// Подраздел: Подсистема сериализации
// Автор: MagistrBYTE aka DanielDem <dementevds@gmail.com>
//---------------------------------------------------------------------------------------------------------------------
/** \file CubeXSerializationAttributes.cs
*		Определение атрибутов подсистемы сериализации.
*		Атрибуты определяют статус сериализации поля или свойства и позволяют управлять некоторыми аспектами процесса
*	сериализации.
*/
//---------------------------------------------------------------------------------------------------------------------
// Версия: 1.0.0.0
// Последнее изменение от 04.04.2021
//=====================================================================================================================
using System;
using System.IO;
using System.Xml;
//=====================================================================================================================
namespace CubeX
{
	namespace Core
	{
		//-------------------------------------------------------------------------------------------------------------
		//! \addtogroup CoreModuleSerialization
		/*@{*/
		//-------------------------------------------------------------------------------------------------------------
		/// <summary>
		/// Атрибут для определения псевдонима имени типа
		/// </summary>
		/// <remarks>
		/// По умолчанию сериализуется собственное имя типа, данным атрибутов это можно поменять например для более
		/// удобочитаемого имени типа.
		/// Также следует позаботится об уникальности псевдонима в рамках проекта.
		/// Так как псевдоним образует имя элемента в формате XML то он должен подчинятся правилам использования 
		/// допустимых символов
		/// </remarks>
		//-------------------------------------------------------------------------------------------------------------
		[AttributeUsage(AttributeTargets.Struct | AttributeTargets.Class, AllowMultiple = false)]
		public sealed class CubeXSerializeAliasTypeAttribute : Attribute
		{
			#region ======================================= ДАННЫЕ ====================================================
			internal String mName;
			#endregion

			#region ======================================= СВОЙСТВА ==================================================
			/// <summary>
			/// Имя типа для сериализации
			/// </summary>
			public String Name
			{
				get { return mName; }
				set { mName = value; }
			}
			#endregion

			#region ======================================= КОНСТРУКТОРЫ ==============================================
			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Конструктор инициализирует объект класса указанными параметрами
			/// </summary>
			/// <param name="name">Имя типа для сериализации</param>
			//---------------------------------------------------------------------------------------------------------
			public CubeXSerializeAliasTypeAttribute(String name)
			{
				mName = name;
			}
			#endregion
		}


		//-------------------------------------------------------------------------------------------------------------
		/// <summary>
		/// Атрибут для определения сериализации свойства/поля
		/// </summary>
		/// <remarks>
		/// Реализация атрибута для определения возможности сериализации свойства/поля.
		/// Соответственно определяет возможность сериализации на уровне типа объекта.
		/// Также атрибут позволяет определить под каким именем будет записано поле или свойство объекта в поток данных.
		/// Так как имя образует имя элемента/атрибута в формате XML то он должен подчинятся правилам использования 
		/// допустимых символов
		/// </remarks>
		//-------------------------------------------------------------------------------------------------------------
		[AttributeUsage(AttributeTargets.Field | AttributeTargets.Property, AllowMultiple = false)]
		public sealed class CubeXSerializeMemberAttribute : Attribute
		{
			#region ======================================= ДАННЫЕ ====================================================
			internal String mName;
			#endregion

			#region ======================================= СВОЙСТВА ==================================================
			/// <summary>
			/// Имя для сериализации члена типа
			/// </summary>
			public String Name
			{
				get { return mName; }
				set { mName = value; }
			}
			#endregion

			#region ======================================= КОНСТРУКТОРЫ ==============================================
			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Конструктор по умолчанию инициализирует объект класса предустановленными значениями
			/// </summary>
			//---------------------------------------------------------------------------------------------------------
			public CubeXSerializeMemberAttribute()
			{
				mName = "";
			}

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Конструктор инициализирует объект класса указанными параметрами
			/// </summary>
			/// <param name="name">Имя для сериализации члена типа</param>
			//---------------------------------------------------------------------------------------------------------
			public CubeXSerializeMemberAttribute(String name)
			{
				mName = name;
			}
			#endregion
		}

		//-------------------------------------------------------------------------------------------------------------
		/// <summary>
		/// Атрибут для определения сериализации свойства/поля как ссылки
		/// </summary>
		/// <remarks>
		/// Если поле/свойство имеет тип класса, т.е ссылочного типа иногда требуется не сохранять его данные, а лишь
		/// сохранить ссылку на этот объект.
		/// При этом объем сохраняемых данные должен быть достаточным чтобы после загрузки всех данных 
		/// мы смогли их восстановить и связать
		/// </remarks>
		//-------------------------------------------------------------------------------------------------------------
		[AttributeUsage(AttributeTargets.Field | AttributeTargets.Property, AllowMultiple = false)]
		public sealed class CubeXSerializeMemberAsReferenceAttribute : Attribute
		{
		}

		//-------------------------------------------------------------------------------------------------------------
		/// <summary>
		/// Атрибут для исключения автоматической сериализации объекта
		/// </summary>
		/// <remarks>
		/// Атрибут применяется для типов которые не нужно автоматические сериализовывать, то есть не надо брать данные
		/// для сериализации в процесс анализа типов.
		/// Как правило такие типы должны сериализовать специальный образом
		/// </remarks>
		//-------------------------------------------------------------------------------------------------------------
		[AttributeUsage(AttributeTargets.Class | AttributeTargets.Struct, AllowMultiple = false, Inherited = false)]
		public sealed class CubeXSerializeDisableAttribute : Attribute
		{
		}

		//-------------------------------------------------------------------------------------------------------------
		/// <summary>
		/// Атрибут для указания того что тип самостоятельно предоставит данные для сериализации
		/// </summary>
		/// <remarks>
		/// Тип помеченный данным атрибутом должен обязательно реализовать статический метод
		/// с именем <see cref="XSerializationDispatcher.GET_SERIALIZE_DATA_METHOD"/> который возвращает данные сериализации
		/// </remarks>
		//-------------------------------------------------------------------------------------------------------------
		[AttributeUsage(AttributeTargets.Class | AttributeTargets.Struct, AllowMultiple = false, Inherited = false)]
		public sealed class CubeXSerializeDataAttribute : Attribute
		{
		}

		//-------------------------------------------------------------------------------------------------------------
		/// <summary>
		/// Атрибут для информирование о том что тип сериализуется как примитивный
		/// </summary>
		/// <remarks>
		/// В контексте текстового потока данных это означает что он может быт записан в одну строку (в формат атрибута XML)
		/// Тип помеченный данным атрибутом должен обязательно реализовать статический метод 
		/// с именем <see cref="XSerializationDispatcher.DESERIALIZE_FROM_STRING"/> и обычный метод с именем
		/// <see cref="XSerializationDispatcher.SERIALIZE_TO_STRING"/>
		/// </remarks>
		//-------------------------------------------------------------------------------------------------------------
		[AttributeUsage(AttributeTargets.Class | AttributeTargets.Struct, AllowMultiple = false, Inherited = false)]
		public sealed class CubeXSerializeAsPrimitiveAttribute : Attribute
		{
		}
		//-------------------------------------------------------------------------------------------------------------
		/*@}*/
		//-------------------------------------------------------------------------------------------------------------
	}
}
//=====================================================================================================================