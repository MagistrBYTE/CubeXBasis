//=====================================================================================================================
// Проект: CubeXPlatform
// Раздел: Модуль базового ядра
// Подраздел: Подсистема интерфейсов
// Автор: MagistrBYTE aka DanielDem <dementevds@gmail.com>
//---------------------------------------------------------------------------------------------------------------------
/** \file CubeXnterfaceSystem.cs
*		Определение базовых, системных интерфейсов.
*/
//---------------------------------------------------------------------------------------------------------------------
// Версия: 1.0.0.0
// Последнее изменение от 23.02.2020
//=====================================================================================================================
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Reflection;
//=====================================================================================================================
namespace CubeX
{
	namespace Core
	{
		//-------------------------------------------------------------------------------------------------------------
		//! \defgroup CoreModuleInterfaces Подсистема интерфейсов
		//! Подсистема интерфейсов содержит базовые интерфейсы которые определяют различные аспекты работы с объектами
		//! \ingroup CoreModule
		/*@{*/
		//-------------------------------------------------------------------------------------------------------------
		/// <summary>
		/// Определение интерфейса для объектов поддерживающих копирование параметров с других объектов
		/// </summary>
		//-------------------------------------------------------------------------------------------------------------
		public interface ICubeXCopyParameters
		{
			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Копирование параметров с указанного объекта
			/// </summary>
			/// <param name="source_object">Объект-источник с которого будут скопированы параметры</param>
			//---------------------------------------------------------------------------------------------------------
			void CopyParameters(System.Object source_object);
		}

		//-------------------------------------------------------------------------------------------------------------
		/// <summary>
		/// Определение интерфейса для информирование о начале процесса загрузки
		/// </summary>
		//-------------------------------------------------------------------------------------------------------------
		public interface ICubeXBeforeLoad
		{
			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Метод вызывается непосредственно перед загрузкой всех данных
			/// </summary>
			/// <remarks>
			/// Реализация данного метода может предусматривать дополнительные действия, например по подготовки формата
			/// загрузки данных или очистку внутренних данных
			/// </remarks>
			//---------------------------------------------------------------------------------------------------------
			void OnBeforeLoad();
		}

		//-------------------------------------------------------------------------------------------------------------
		/// <summary>
		/// Определение интерфейса для информирование о завершении процесса загрузки
		/// </summary>
		//-------------------------------------------------------------------------------------------------------------
		public interface ICubeXAfterLoad
		{
			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Метод вызывается непосредственно после загрузки всех данных
			/// </summary>
			/// <remarks>
			/// Реализация данного метода может предусматривать дополнительные действия, например по динамическому
			/// связыванию, которые можно/нужно осуществить после полной загрузки всех данных
			/// </remarks>
			//---------------------------------------------------------------------------------------------------------
			void OnAfterLoad();
		}

		//-------------------------------------------------------------------------------------------------------------
		/// <summary>
		/// Определение интерфейса для информирование о начале процесса сохранения
		/// </summary>
		//-------------------------------------------------------------------------------------------------------------
		public interface ICubeXBeforeSave
		{
			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Метод вызывается непосредственно перед сохранением всех данных
			/// </summary>
			//---------------------------------------------------------------------------------------------------------
			void OnBeforeSave();
		}

		//-------------------------------------------------------------------------------------------------------------
		/// <summary>
		/// Определение интерфейса для информирование о завершении процесса сохранения
		/// </summary>
		//-------------------------------------------------------------------------------------------------------------
		public interface ICubeXAfterSave
		{
			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Метод вызывается непосредственно после сохранения всех данных
			/// </summary>
			//---------------------------------------------------------------------------------------------------------
			void OnAfterSave();
		}

		//-------------------------------------------------------------------------------------------------------------
		/// <summary>
		/// Определение интерфейса для информирования об изменении данных (свойства/поля)
		/// </summary>
		/// <remarks>
		/// <para>
		/// Данный интерфейс применятся в родительских отношениях, когда дочерний объект уведомляет родителя об изменении
		/// своих свойств через ссылку на родителя реализующего этот интерфейс
		/// </para>
		/// <para>
		/// Также данный интерфейс будет применяться в шаблоне проектирования ECS для уведомления компонентами сущностей 
		/// которым они присоединены
		/// </para>
		/// </remarks>
		//-------------------------------------------------------------------------------------------------------------
		public interface ICubeXNotify
		{
			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Информирование данного объекта о начале изменения данных указанного объекта
			/// </summary>
			/// <param name="source">Объект данные которого будут меняться</param>
			/// <param name="data_name">Имя данных</param>
			/// <returns>Статус разрешения/согласования изменения данных</returns>
			//---------------------------------------------------------------------------------------------------------
			Boolean OnNotifyUpdating(System.Object source, String data_name);

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Информирование данного объекта об окончании изменении данных указанного объекта
			/// </summary>
			/// <param name="source">Объект данные которого изменились</param>
			/// <param name="data_name">Имя данных</param>
			//---------------------------------------------------------------------------------------------------------
			void OnNotifyUpdated(System.Object source, String data_name);
		}
		//-------------------------------------------------------------------------------------------------------------
		/*@}*/
		//-------------------------------------------------------------------------------------------------------------
	}
}
//=====================================================================================================================