//=====================================================================================================================
// Проект: CubeXPlatform
// Раздел: Модуль базового ядра
// Подраздел: Подсистема интерфейсов
// Автор: MagistrBYTE aka DanielDem <dementevds@gmail.com>
//---------------------------------------------------------------------------------------------------------------------
/** \file CubeXnterfaceIdentifier.cs
*		Определение интерфейсов определяющий различные виды идентификаторов.
*/
//---------------------------------------------------------------------------------------------------------------------
// Версия: 1.0.0.0
// Последнее изменение от 23.02.2020
//=====================================================================================================================
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Reflection;
//=====================================================================================================================
namespace CubeX
{
	namespace Core
	{
		//-------------------------------------------------------------------------------------------------------------
		//! \addtogroup CoreModuleInterfaces
		/*@{*/
		//-------------------------------------------------------------------------------------------------------------
		/// <summary>
		/// Определение интерфейса для объектов реализующих понятие индекса <see cref="XIdentifier.Index"/>
		/// </summary>
		//-------------------------------------------------------------------------------------------------------------
		public interface ICubeXIndexable
		{
			/// <summary>
			/// Индекс элемента
			/// </summary>
			Int32 Index { get; set; }
		}

		//-------------------------------------------------------------------------------------------------------------
		/// <summary>
		/// Определение интерфейса для объектов реализующих уникальный числовой идентификатор <see cref="XIdentifier.ID"/>
		/// </summary>
		//-------------------------------------------------------------------------------------------------------------
		public interface ICubeXIdentifierID
		{
			/// <summary>
			/// Уникальный идентификатор объекта
			/// </summary>
			Int32 ID { get; set; }
		}

		//-------------------------------------------------------------------------------------------------------------
		/// <summary>
		/// Базовый класс реализующий уникальный числовой идентификатор
		/// </summary>
		//-------------------------------------------------------------------------------------------------------------
		[Serializable]
		public class CIdentifierID : PropertyChangedBase, ICubeXIdentifierID
		{
			#region ======================================= ДАННЫЕ ====================================================
#if (UNITY_2017_1_OR_NEWER)
			[UnityEngine.SerializeField]
			[UnityEngine.HideInInspector]
#endif
			protected internal Int32 mID;
			#endregion

			#region ======================================= СВОЙСТВА ==================================================
			//
			// ИДЕНТИФИКАЦИЯ
			//
			/// <summary>
			/// Уникальный идентификатор объекта
			/// </summary>
			[DisplayName("ID")]
			[Description("Уникальный идентификатор объекта")]
			public virtual Int32 ID
			{
				get { return (mID); }
				set
				{
					mID = value;
				}
			}
			#endregion

			#region ======================================= КОНСТРУКТОРЫ ==============================================
			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Конструктор по умолчанию инициализирует объект класса предустановленными значениями
			/// </summary>
			//---------------------------------------------------------------------------------------------------------
			public CIdentifierID()
			{

			}

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Конструктор инициализирует объект класса указанными параметрами
			/// </summary>
			/// <param name="id">Идентификатор объекта</param>
			//---------------------------------------------------------------------------------------------------------
			public CIdentifierID(Int32 id)
			{
				mID = id;
			}
			#endregion
		}

		//-------------------------------------------------------------------------------------------------------------
		/// <summary>
		/// Определение интерфейса для объектов реализующих глобальный уникальный числовой идентификатор <see cref="XIdentifier.UID"/>
		/// </summary>
		//-------------------------------------------------------------------------------------------------------------
		public interface ICubeXIdentifierUID
		{
			/// <summary>
			/// Глобальный уникальный идентификатор объекта
			/// </summary>
			Int64 UID { get; set; }
		}

		//-------------------------------------------------------------------------------------------------------------
		/// <summary>
		/// Определение интерфейса для объектов реализующих глобальный строковый идентификатор <see cref="XIdentifier.UniqueID"/>
		/// </summary>
		//-------------------------------------------------------------------------------------------------------------
		public interface ICubeXIdentifierUniqueID
		{
			/// <summary>
			/// Глобальный строковый идентификатор
			/// </summary>
			String UniqueID { get; set; }
		}
		//-------------------------------------------------------------------------------------------------------------
		/*@}*/
		//-------------------------------------------------------------------------------------------------------------
	}
}
//=====================================================================================================================